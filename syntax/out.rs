# [allow (unused_imports)] use crate :: rtic_arch :: { MutexProxy , Resource } ; # [allow (unused_imports)] use mutex :: Mutex ; # [allow (unused_imports)] use rtic_zero :: racy_cell :: RacyCell ; use cortex_m_semihosting :: debug ; # [no_mangle] unsafe extern "C" fn main () -> ! { init :: run () ; idle :: run () ; debug :: exit (debug :: EXIT_SUCCESS) ; loop { } } pub mod init { use super :: * ; # [allow (non_upper_case_globals)] static __rtic_internal_a : RacyCell < u32 > = RacyCell :: new (32) ; # [allow (non_upper_case_globals)] static __rtic_internal_b : RacyCell < u64 > = RacyCell :: new (64) ; pub struct Local < 'a > { pub a : & 'a mut u32 , pub b : & 'a mut u64 } impl < 'a > Local < 'a > { pub unsafe fn new () -> Self { Self { a : & mut * __rtic_internal_a . get_mut () , b : & mut * __rtic_internal_b . get_mut () } } } pub struct Context < 'a > { pub local : Local < 'a > , } pub unsafe fn run () { init (Context { local : Local :: new () , }) ; } extern "Rust" { fn init (cx : Context) ; } } pub mod idle { use super :: * ; # [allow (non_upper_case_globals)] static __rtic_internal_a : RacyCell < u32 > = RacyCell :: new (32) ; pub struct Local < 'a > { pub a : & 'a mut u32 } impl < 'a > Local < 'a > { pub unsafe fn new () -> Self { Self { a : & mut * __rtic_internal_a . get_mut () } } } pub struct Context < 'a > { pub local : Local < 'a > , } pub unsafe fn run () { idle (Context { local : Local :: new () , }) ; } extern "Rust" { fn idle (cx : Context) -> ! ; } }